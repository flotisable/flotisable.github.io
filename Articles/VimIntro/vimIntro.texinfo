\input texinfo
@c %**start of header
@setfilename vimIntro
@documentencoding UTF-8
@settitle Vim 介紹 0.1.0
@c %++end of header

@copying
這是用來介紹 vim 文檔

Copyright @copyright{} 2017 Flotisable
@end copying

@titlepage
@title Vim 介紹 0.1.0
@author Flotisable
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top
@end ifnottex

    Vim 是一個純文字編輯器，是從過去在 Unix 上流行的文字編輯器 Vi 所衍生出來的，其代表的意義是 Vi IMproved，也就是改良版的 Vi。Vim 與一般常見的文字編輯器有個很大的不同，它是一種模式編輯器( mode editor )，顧名思義它是透過不同模式的切換來做編輯。這帶來的好處是，藉由賦予不同模式不同的快捷鍵，Vim 可以使用英文字母的區域來達到大量的編輯效果。也就是說在鍵盤上我們輸入文字的區塊也可以是編輯文字的區塊，這使得在熟悉 Vim 的按鍵之後可以達到高速的編輯。而因為 Vim 的這個特性，所有文字編輯的功能都可以只靠鍵盤來做到，滑鼠就變得無用武之地了。

    捨棄滑鼠以及在同樣的鍵盤區塊所帶來的編輯效率在親身體驗之後真的會有很明顯的感受。因為手指需要移動的距離變小，所以可以很快的做到很多事。而 Vim 對於初學者的缺點是學習曲線較高，需要學一段時間才能有明顯的效果。Vim 支援的平台還蠻多元的，因此只要學會了，不管到什麼平台都能使用，學習的報酬率還是蠻高的。Vim 也同時提供了終端機與 GUI 的版本，如果想要比較漂亮的介面的話可以使用 GUI 的版本。雖然 Vim 可以設定使用滑鼠(在GUI中好像是預設值)，但我認為這樣就會失去了一些使用 Vim 的價值。

    Vim 除了高速的編輯與跨平台的優點之外，它也是個小而快的程式，在我的電腦中好像不到 10 MB。那麼接下來我會一步步介紹我所知道的 Vim 的功能，希望會對看這份文件的人有所幫助。

@menu
* 我只要知道最基本的生存知識就好了: Ch1. 
@end menu

@node Ch1
@chapter 我只要知道最基本的生存知識就好了

    我想一個文字編輯器最基本的應該就是要如何輸入文字、儲存檔案與離開編輯器了吧。只要知道這些就能做最低限度的編輯，而對於使用 Vim 的初學者來說，這三件事卻不是這麼的容易。

    在介紹這三個基本操作之前，要先簡單介紹一下 Vim 的三個模式：普通模式( normal mode )、插入模式( insert mode )與命令模式( command mode )。在最開始的簡介也有提到，Vim 是個模式編輯器，而這三個模式是在使用 Vim 的時候最常用的三個模式。在預設的情況下 Vim 在開啟時會進入普通模式，這個模式也是我認為 Vim 在文字編輯上最強大的模式，基本上每個符號按鍵都對應到一個編輯功能，詳細之後會慢慢介紹。這裡只提兩個按鍵，@kbd{i} 與 @kbd{:}。這兩個按鍵的功能分別是『進入插入模式』與『進入命令模式』。

    在按下 @kbd{i} 進入插入模式後，Vim 的左下方應該會出現 @emph{INSERT} 的字。而 i 就是 insert 的縮寫，在普通模式中許多的按鍵都像 @kbd{i} 這樣可以用英文縮寫來記，因此不容易忘。進入了插入模式之後就跟一般常用的編輯器差不多了，任何輸入的符號都是在文件中插入對應的符號。可以想成一般的編輯器預設就是進入插入模式。在輸入完文字之後只要按下 @kbd{@key{ESC}} 就會回到普通模式了。

    在按下 @kbd{:} 進入命令模式後，游標應該會跑到 Vim 的最下方，並在行首顯示 : 符號。跟插入模式一樣，可以像一般的編輯器輸入文字，只是文字只會在視窗最下方，而這些輸入的文字就是在對 Vim 下命令，按下 @kbd{@key{RET}} 之後 Vim 會執行輸入的命令。在這裡我要介紹的是存檔與離開編輯器的命令，分別是 @command{write} 與 @command{quit}。如果不想打這麼多字的話，Vim 對常用的命令提供了縮寫，而這兩個命令的縮寫分別是 w 與 q，也就是第一個字母。有時候我們在修改文件後並不想存檔而想直接離開編輯器，這時 Vim 會跳出錯誤說文件被修改不能離開。只要在 @command{quit} 最後加上 ! ( 強制執行的概念 ) 便能不存檔而離開。另外我們常常想在存檔後直接離開編輯器，這時候可以直接將這兩個命令的縮寫連在一起輸入 wq ，Vim 就會同時執行這兩個命令。值得注意的是，這是 Vim 為這兩個命令縮寫提供的功能，基本上就是另一個命令，所以不是對每個命令都適用。

    這樣三個基本的操作就介紹完了，可以自己實際嘗試看看，這樣才會記得起來。

@bye
